{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-d83b95cb897fd7f1ecc7216a31a9167598810a902c9c43ec11b6a93965548994186b900fe348e64bdf35a97b36d2fdb26731097dc1738e7f73bc67d2d432a47c",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  async navigateTo(): Promise<unknown> {\n    return browser.get(browser.baseUrl);\n  }\n\n  async getTitleText(): Promise<string> {\n    return element(by.css('app-root .content span')).getText();\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<>",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "CustomFormControl",
            "id": "directive-CustomFormControl-c2ddb45c18229257c94881896652d8c32aee318d6a81e201cb9855b0b2b96aad3a3b23a94873025ce53084dde9961346974ddef244470c04cc52599007214ced",
            "file": "src/app/components/base/base-form-input.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { AbstractControl, ControlValueAccessor, FormControl } from '@angular/forms';\r\n\r\n@Directive()\r\nexport class CustomFormControl implements OnInit, OnChanges, ControlValueAccessor {\r\n\r\n  readonly formId: string = `${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`;\r\n\r\n  @Input() formControl: AbstractControl = new FormControl();\r\n\r\n  @Input() label: string;\r\n\r\n  @Input() disabled: boolean = false;\r\n\r\n  @Input() fieldDisabledOverride: boolean = false; // This overrides disabled state\r\n\r\n  @Input() prefix: string;\r\n\r\n  @Input() suffix: string;\r\n\r\n  @Input() showLabel: boolean = true;\r\n\r\n  @Input() submitAttempt: boolean = false;\r\n\r\n  @Input() defaultValue: any;\r\n\r\n  @Input() loading: boolean = false;\r\n\r\n  @Input() customErrorMessages: Record<string, string | (() => string)>\r\n\r\n  @Input() debug: boolean = false; // Only to be used in dev / storybook\r\n\r\n  onChange: (value: any) => void;\r\n\r\n  onTouched: () => void;\r\n\r\n  tooltipEnabled: boolean = false;\r\n\r\n  showToolTip: (containerElement: HTMLElement, textElement: HTMLElement) => void = (containterElement, textElement) => {\r\n    this.tooltipEnabled = containterElement.offsetWidth > ( textElement.offsetWidth - 41 )\r\n  }\r\n\r\n  focused: boolean = false;\r\n\r\n  value: any;\r\n\r\n  customFormControl: boolean = false;\r\n\r\n\r\n  ngOnInit (): void {\r\n    if ( !this.formControl.value && this.defaultValue !== undefined  ) {\r\n      this.formControl.setValue(this.defaultValue, { emitEvent: false });\r\n    }\r\n  }\r\n\r\n  ngOnChanges ( changes: SimpleChanges): void {\r\n    if ( changes.formControl ) {\r\n      this.customFormControl = true;\r\n    }\r\n  }\r\n\r\n  writeValue( value: any, inputChange: boolean = false ): void {\r\n    if ( this.formControl.updateOn === 'blur' ) {\r\n      return;\r\n    }\r\n\r\n    this.value = value;\r\n\r\n    if (JSON.stringify(value) !== JSON.stringify(this.formControl.value) && !inputChange) {\r\n      this.formControl.setValue(value);\r\n    }\r\n\r\n    // On want to trigger on change if it is not a form control\r\n    if ( !this.customFormControl ) {\r\n      this.onChange?.(value);\r\n    }\r\n  }\r\n\r\n  registerOnChange (fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  onBlur(): void {\r\n    this.focused = false;\r\n    const noValue = this.value === ''\r\n     || this.value === undefined\r\n     || this.value === null\r\n     || this.value?.length === 0;\r\n\r\n    if ( noValue && this.defaultValue !== undefined  ) {\r\n      this.value = JSON.parse(JSON.stringify(this.defaultValue));\r\n      this.formControl.setValue(this.value);\r\n    }\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n\r\n    console.log(isDisabled);\r\n    console.log(this.formControl.disabled);\r\n\r\n    // if ( this.fieldDisabledOverride ) {\r\n    //   this.disabled = true;\r\n    //   this.formControl.disable();\r\n    //   return;\r\n    // }\r\n\r\n    this.disabled = isDisabled;\r\n    // if (isDisabled === this.formControl.disabled) {\r\n    //   return;\r\n    //  }\r\n\r\n    console.log(this.disabled);\r\n    if ( this.disabled ) {\r\n\r\n      this.formControl.disable();\r\n    } else {\r\n      this.formControl.enable();\r\n    }\r\n  }\r\n}\r\n",
            "providers": [],
            "inputsClass": [
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": []
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": []
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "implements": [
                "OnInit",
                "OnChanges",
                "ControlValueAccessor"
            ]
        },
        {
            "name": "HighlightDirective",
            "id": "directive-HighlightDirective-93ebf80531f0bdd306892b9b75cd2335d8e72f5eb7029d51249ea623ae6c94341ef423ed4c79d0216a95aebfe7bb1654d6072853c4e05c6a07762e8df5515a81",
            "file": "src/app/directives/string-highlight.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[stringHighlight]'\r\n})\r\nexport class HighlightDirective {\r\n\r\n  @Input() set stringHighlight (highlightText) {\r\n    this.highLightString(highlightText);\r\n\r\n  }\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n highLightString ( searchString = ''): void {\r\n   // Get inner html and remove any highlights\r\n   let elementInnerHtml = this.el.nativeElement.innerHTML\r\n    .replace('<strong>', '')\r\n    .replace('</strong>', '')\r\n    .trim();\r\n\r\n    if( ( !searchString || searchString === '' ) && elementInnerHtml ) {\r\n      this.el.nativeElement.innerHTML = elementInnerHtml;\r\n      return;\r\n    }\r\n\r\n    const regex = new RegExp(searchString, 'ig').exec(elementInnerHtml);\r\n\r\n    if ( regex?.[0] ) {\r\n      elementInnerHtml = elementInnerHtml.replace(regex[0],`<strong>${regex[0]}</strong>` )\r\n      this.el.nativeElement.innerHTML = elementInnerHtml;\r\n    }\r\n }\r\n}\r\n",
            "selector": "[stringHighlight]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "stringHighlight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "highLightString",
                    "args": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "searchString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "stringHighlight": {
                    "name": "stringHighlight",
                    "setSignature": {
                        "name": "stringHighlight",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "highlightText",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 8,
                        "jsdoctags": [
                            {
                                "name": "highlightText",
                                "type": "",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "name": "showToolTipDirective",
            "id": "directive-showToolTipDirective-2e4a94ef2be56ea5246ed700491a565ef29d81b275e51220522e60fde8c529a641eb33a1193e54a80f5becc7d5e6de0ea5388efd79a6aa4ca4ec3d22121ff04f",
            "file": "src/app/directives/showTooltip.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[showToolTip]'\r\n})\r\nexport class showToolTipDirective {\r\n\r\n  @Input() containerElement: HTMLElement;\r\n\r\n  @Input() textElement: HTMLElement;\r\n\r\n  tooltipDisabled: boolean = false;\r\n\r\n  constructor(private el: ElementRef) {\r\n    el.nativeElement.onmouseover = () => {\r\n      const containerWidth = this.el.nativeElement.offsetWidth;\r\n      const childWidth = this.el.nativeElement.childNodes[0].offsetWidth;\r\n      console.log('Mouseover!', containerWidth, childWidth);\r\n\r\n      this.el.nativeElement.tooltipDisabled = containerWidth >= childWidth;\r\n    }\r\n  }\r\n}\r\n\r\n",
            "selector": "[showToolTip]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "containerElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "HTMLElement",
                    "decorators": []
                },
                {
                    "name": "textElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "HTMLElement",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "tooltipDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "el",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-052936fa35e309108fd0d629a51634f2433d652d520fe7422ca2844498049e5016e9007664eb0e5a36734dc2dc190c05638d2ade34a62caf33a6c08faf03a3bb",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dateControl",
                    "defaultValue": "new FormControl(new Date())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "dateInputControl",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "dateRangeControl",
                    "defaultValue": "new FormGroup({\n    start: new FormControl(new Date()),\n    end: new FormControl(new Date()),\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "dateRangeInput",
                    "defaultValue": "{\n    start: new Date(),\n    end: new Date(),\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "multiSelectInputModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "numberInput",
                    "defaultValue": "new FormControl('123.4', Validators.compose([Validators.min(200)]))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "numberInputBlur",
                    "defaultValue": "new FormControl('1234.4423', { updateOn: 'blur' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "numberModel",
                    "defaultValue": "123",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "selectInput",
                    "defaultValue": "new FormControl({\n    value: 'Test',\n    name: 'Test',\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "selectInputModel",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "sliderControl",
                    "defaultValue": "new FormControl(2)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "sliderInput",
                    "defaultValue": "2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "test",
                    "defaultValue": "new FormControl('Tester', Validators.compose([Validators.required]))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "testBlur",
                    "defaultValue": "new FormControl('Tester', { updateOn: 'blur' })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "textareaText",
                    "defaultValue": "'text area'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "title",
                    "defaultValue": "'custom-form-controls'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "toggleControl",
                    "defaultValue": "new FormControl(true)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "toggleInput",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'custom-form-controls';\n  test = new FormControl('Tester', Validators.compose([Validators.required]));\n\n  testBlur = new FormControl('Tester', { updateOn: 'blur' });\n\n  numberInput = new FormControl('123.4', Validators.compose([Validators.min(200)]));\n  numberInputBlur = new FormControl('1234.4423', { updateOn: 'blur' });\n  selectInput = new FormControl({\n    value: 'Test',\n    name: 'Test',\n  });\n\n  selectInputModel;\n\n  multiSelectInputModel;\n\n  numberModel = 123;\n\n  textareaText = 'text area';\n\n  dateInputControl = new Date();\n\n  dateControl = new FormControl(new Date());\n\n\n  sliderInput = 2;\n  sliderControl = new FormControl(2);\n\n  toggleInput = false;\n  toggleControl = new FormControl(true);\n\n  dateRangeInput = {\n    start: new Date(),\n    end: new Date(),\n  };\n\n  dateRangeControl = new FormGroup({\n    start: new FormControl(new Date()),\n    end: new FormControl(new Date()),\n  });\n\n\n  constructor() {\n\n    setTimeout(() => {\n      this.title = 'testeterer';\n      this.test.setValue('Hey there!');\n      this.testBlur.setValue('Blur update!');\n\n      this.numberInput.setValue(123.2890347238947238947239847392874);\n      this.numberInput.setErrors({invalid: true, minLength: 4});\n      this.numberInputBlur.setValue(21323.2890347238947238947239847392874);\n\n      this.test.disable();\n      this.selectInput.disable();\n\n      this.dateInputControl = new Date();\n      this.dateControl.setValue(new Date());\n\n      this.dateControl.disable();\n    }, 5000);\n\n    setTimeout(() => {\n      this.test.enable();\n      this.selectInput.enable();\n    }, 10000);\n\n    this.numberInputBlur.valueChanges\n    .subscribe({\n      next: ( val ) => {\n        console.log(val);\n      }\n    });\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".form-example {\r\n  width: 100%;\r\n  max-width: 960px;\r\n  margin: 12px auto;\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n\r\n.type-grouping {\r\n  display: flex;\r\n  margin-bottom: 16px;\r\n  border-radius: 4px;\r\n  padding: 12px;\r\n  background: white;\r\n  box-shadow: 0 4px 4px 0 rgba( 0, 0, 0, 0.12);\r\n\r\n  &:last-of-type {\r\n    margin-bottom: 60px;\r\n  }\r\n  .title {\r\n    flex: 1;\r\n    margin-right: 12px;\r\n    padding-right: 12px;\r\n    border-right: solid 1px rgba(0, 0, 0, .12);\r\n\r\n    h2 {\r\n      font-weight: 700;\r\n      font-size: 16px;;\r\n    }\r\n  }\r\n\r\n  .forms {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex: 3;\r\n  }\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 48
            },
            "templateData": "<section class=\"form-example\">\n\n  <section class=\"type-grouping\">\n    <section class=\"title\">\n      <h2>Text inputs</h2>\n    </section>\n\n    <section class=\"forms\">\n      <app-text-input\n        label=\"Basic text input\"\n        [(ngModel)]=\"title\">\n      </app-text-input>\n\n      <app-text-input\n        label=\"Text input with NgModel\"\n        [disabled]=\"true\"\n        [(ngModel)]=\"title\">\n      </app-text-input>\n\n      <app-text-input\n        label=\"Text input form control\"\n        [formControl]=\"test\">\n      </app-text-input>\n\n      <app-text-input\n        label=\"Text input update on blur (with suffix / prefix)\"\n        prefix=\"$\"\n        suffix=\"suffix example\"\n        [formControl]=\"testBlur\">\n      </app-text-input>\n    </section>\n  </section>\n\n  <section class=\"type-grouping\">\n    <section class=\"title\">\n      <h2>Number inputs</h2>\n    </section>\n\n    <section class=\"forms\">\n      <app-number-input\n          label=\"Number input\"\n          format=\"C2\"\n          prefix=\"£\"\n          [formControl]=\"numberInput\">\n        </app-number-input>\n\n        <app-number-input\n          label=\"Number blur input\"\n          format=\"C3\"\n          [formControl]=\"numberInputBlur\">\n        </app-number-input>\n\n\n        <app-number-input\n          label=\"Number model input\"\n          format=\"C3\"\n          [(ngModel)]=\"numberModel\">\n        </app-number-input>\n\n    </section>\n  </section>\n\n  <section class=\"type-grouping\">\n    <section class=\"title\">\n      <h2>Select inputs</h2>\n    </section>\n\n    <section class=\"forms\">\n\n  <app-select-input\n      label=\"Select input\"\n      [disabled]=\"true\"\n      [formControl]=\"selectInput\">\n    </app-select-input>\n\n    <app-select-input\n      label=\"Select input model\"\n      [(ngModel)]=\"selectInputModel\">\n    </app-select-input>\n\n\n    <div class=\"side-by-side\">\n      <app-select-input\n      label=\"Select input model\"\n      [(ngModel)]=\"selectInputModel\">\n    </app-select-input>\n\n    <app-slider-input\n    label=\"Form slider\"\n    [formControl]=\"sliderControl\">\n\n  </app-slider-input>\n\n    </div>\n    <app-select-input\n      label=\"Select input model\"\n      [multiSelect]=\"true\"\n      [(ngModel)]=\"multiSelectInputModel\">\n    </app-select-input>\n\n    </section>\n  </section>\n\n\n  <section class=\"type-grouping\">\n    <section class=\"title\">\n      <h2>Text area</h2>\n    </section>\n\n    <section class=\"forms\">\n      <app-text-area\n        label=\"Text area input\"\n        [(ngModel)]=\"textareaText\">\n      </app-text-area>\n\n    </section>\n  </section>\n\n\n  <section class=\"type-grouping\">\n    <section class=\"title\">\n      <h2>Date inputs area</h2>\n    </section>\n\n    <section class=\"forms\">\n\n      <app-date-picker\n        [(ngModel)]=\"dateInputControl\"\n        label=\"NG model date\">\n      </app-date-picker>\n\n      <app-date-picker\n        [formControl]=\"dateControl\"\n        label=\"Date form control!\">\n      </app-date-picker>\n    </section>\n  </section>\n\n\n  <section class=\"type-grouping\">\n    <section class=\"title\">\n      <h2>Date range input  area</h2>\n    </section>\n\n    <section class=\"forms\">\n      <!-- <app-date-range-input\n        label=\"model date range!\"\n        [(ngModel)]=\"dateRangeInput\">\n      </app-date-range-input> -->\n\n      <!-- <app-date-range-input\n        label=\"form control date range!\"\n        [formControl]=\"dateRangeControl\">\n      </app-date-range-input> -->\n\n    </section>\n  </section>\n\n\n  <section class=\"type-grouping\">\n    <section class=\"title\">\n      <h2>Slider input</h2>\n    </section>\n\n    <section class=\"forms\">\n      <app-slider-input\n        label=\"ngmdoel slider\"\n        [(ngModel)]=\"sliderInput\">\n\n      </app-slider-input>\n\n      {{ sliderInput }}\n\n      <app-slider-input\n      label=\"Form slider\"\n      [formControl]=\"sliderControl\">\n\n    </app-slider-input>\n\n    {{ sliderControl.value }}\n    </section>\n  </section>\n\n  <section class=\"type-grouping\">\n    <section class=\"title\">\n      <h2>Toggle input</h2>\n    </section>\n\n    <section class=\"forms\">\n      <app-toggle-slide\n        label=\"ngModel toggle\"\n        [(ngModel)]=\"toggleInput\">\n      </app-toggle-slide>\n\n      <app-toggle-slide\n        label=\"form toggle\"\n        [formControl]=\"toggleControl\">\n      </app-toggle-slide>\n    </section>\n  </section>\n</section>\n\n"
        },
        {
            "name": "DatePickerComponent",
            "id": "component-DatePickerComponent-4aa5e3e689c5f238a2465864abb18477cbdddb1681d1ddd63d2aeb57481a4488698736be756d3ff78818ee5e8908bb792e9b8ddbb57fe58a009437a44130fc80",
            "file": "src/app/components/date-picker/date-picker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatePickerComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-date-picker",
            "styleUrls": [
                "./date-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-picker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "random",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CustomFormControl } from 'src/app/components/base/base-form-input';\n\n@Component({\n  selector: 'app-date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatePickerComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatePickerComponent extends CustomFormControl implements OnInit, ControlValueAccessor {\n\n  @Input() random;\n  constructor() {\n    super();\n   }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-wrapper {\r\n  button {\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n\r\n    i {\r\n      color: #333;\r\n      transition: all 0.175s ease-in-out;\r\n    }\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n\r\n      i {\r\n        color: var(--form-input-color);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./date-picker.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "extends": "CustomFormControl",
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "templateData": "<section\n  class=\"form-input\"\n  [class.disabled]=\"disabled\"\n  [class.focused]=\"focused\">\n\n  <label [for]=\"formId\">\n    {{ label }}\n  </label>\n\n  <section class=\"input\">\n\n    <div class=\"input-wrapper\">\n      <input\n        #input\n        [id]=\"formId\"\n        matInput\n        [matDatepicker]=\"picker\"\n        type=\"text\"\n        [formControl]=\"formControl\"\n        [disabled]=\"disabled\"\n        (dateInput)=\"writeValue($event.value, true)\"\n        (focus)=\"focused = true\"\n        (blur)=\"onTouched(); focused = false\">\n\n        <button\n          (click)=\"picker.open()\"\n          [disabled]=\"disabled\"\n          class=\"date-picker-icon\">\n          <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n        </button>\n\n    </div>\n\n    <mat-datepicker #picker></mat-datepicker>\n\n  </section>\n\n</section>\n<section\n  *ngIf=\"formControl?.invalid\"\n  class=\"errors\">\n  <p *ngFor=\"let error of formControl.errors | keyvalue\">\n    {{ error.key }}\n  </p>\n</section>\n\n\n<section\n  *ngIf=\"debug\"\n  class=\"debug-items\">\n\n\n  <div class=\"data-item\">\n    <p>Value</p>\n    <p>{{ formControl.value || value }}</p>\n  </div>\n\n</section>\n"
        },
        {
            "name": "DateRangeInputComponent",
            "id": "component-DateRangeInputComponent-be7cd14b01a780fa1253866839f202998d1bbf54c4ded1ae3b342fb5e1a69daf1356d19b6a524c70622700fd4c9961ae56c50d6deafb0582082a0641764a0e2e",
            "file": "src/app/components/date-range-input/date-range-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DateRangeInputComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-date-range-input",
            "styleUrls": [
                "./date-range-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./date-range-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "random",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CustomFormControl } from 'src/app/components/base/base-form-input';\n\n@Component({\n  selector: 'app-date-range-input',\n  templateUrl: './date-range-input.component.html',\n  styleUrls: ['./date-range-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DateRangeInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class DateRangeInputComponent extends CustomFormControl implements ControlValueAccessor {\n\n  @Input() random;\n\n  constructor() {\n    super();\n\n    console.log(this.registerOnChange);\n    console.log(this.formControl);\n  }\n\n}\n//   // @ViewChild( 'picker', { static: false }) startDatePicker: MatDateRangePicker<any>;\n\n\n//   // @ViewChild( 'picker2', { static: false }) endDatePicker: MatDateRangePicker<any>;\n\n//   // @Input() formControl: FormGroup = new FormGroup({\n//   //   start: new FormControl(),\n//   //   end: new FormControl(),\n//   // });\n\n//   // formControlValueChanges: Subscription;\n\n//   // get startControl (): FormControl {\n//   //   return this.formControl.get('start') as FormControl;\n//   // }\n\n//   // get endControl (): FormControl {\n//   //   return this.formControl.get('end') as FormControl;\n//   // }\n\n\n//   // controlsEnd = new FormGroup({\n//   //   start: new FormControl(),\n//   //   end: new FormControl(),\n//   // });\n\n//   // controlsStart = new FormGroup({\n//   //   start: new FormControl(),\n//   //   end: new FormControl(),\n//   // });\n\n\n//   // constructor() {\n//   //   super();\n//   // }\n\n//   // ngOnInit(): void {\n//   //   // this.listenToFormControlChanges();\n//   // }\n\n\n//   // ngOnChanges(changes: SimpleChanges): void {\n//   //   if( changes.formControl ) {\n//   //     // this.listenToFormControlChanges();\n//   //   }\n//   // }\n\n//   // // writeValue( value: any, inputChange: boolean = false ): void {\n//   // //   console.log('In this bit', value);\n//   // //   this.value = value;\n\n//   // //   if (JSON.stringify(value) !== JSON.stringify(this.formControl.value) && !inputChange) {\n//   // //     this.formControl.patchValue(value, { emitEvent: false });\n//   // //   }\n\n//   // //   // On want to trigger on change if it is not a form control\n\n//   // //   console.log(this.onChange);\n//   // //   console.log({value});\n//   // //   this.onChange?.(value);\n//   // // }\n\n//   // openEndDatePicker( startDate: Moment ): void {\n//   //   this.endDatePicker.open();\n//   //   this.endDatePicker.select(moment(startDate));\n//   //   setTimeout(() => {\n//   //     // this.endDatePicker._applyPendingSelection();\n//   //   })\n//   // }\n\n//   // updateValue(event, area) {\n//   //   this.value = {\n//   //     ...this.value,\n//   //     [area]: event,\n//   //   }\n\n//   //   if ( area === 'start' ) {\n//   //     this.startDatePicker.close();\n//   //     this.openEndDatePicker(event);\n//   //   }\n\n//   //   if ( this.value.end && this.value.start ) {\n//   //     // this.writeValue(this.value);\n//   //   }\n\n//   // }\n\n//   // listenToFormControlChanges (): void {\n//   //  //  this.formControlValueChanges?.unsubscribe();\n\n//   //   // this.formControlValueChanges = this.formControl\n//   //   //   .valueChanges\n//   //   //   .pipe(\n//   //   //     skipWhile((val) => !val.start || !val.end )\n//   //   //   )\n//   //   //   .subscribe({\n//   //   //     next: ( val ) => {\n\n//   //   //       this.writeValue(val, true);\n//   //   //       console.log(val);\n//   //   //     }\n//   //   //   });\n//   // }\n\n//   // test(): void {\n\n//   // }\n// }\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input-wrapper {\r\n  align-items: center;\r\n  width: 100%;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n\r\n\r\n  button {\r\n    background: none;\r\n    outline: none;\r\n    border: none;\r\n\r\n    i {\r\n      color: #333;\r\n      transition: all 0.175s ease-in-out;\r\n    }\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n\r\n      i {\r\n        color: var(--outline-color);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.input {\r\n  border: none !important;\r\n}\r\n\r\n.input-container {\r\n  display: flex;\r\n  align-items: center;\r\n  min-width: 200px;\r\n  flex: 1;\r\n\r\n\r\n  .input-wrapper {\r\n    border: solid 1px var(--label-colour);\r\n    border-radius: 4px;\r\n    padding: 6px 8px;\r\n    flex-wrap: nowrap !important;\r\n  }\r\n\r\n  // + .input-container {\r\n  //   margin-left: 10px;\r\n  // }\r\n\r\n  > p {\r\n    margin-right: 8px;\r\n    font-size: 14px;\r\n    text-align: right;\r\n    min-width: 30px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./date-range-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 23
            },
            "extends": "CustomFormControl",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "\n\nhello\n\n\n<!--\n  section\n  class=\"form-input\">\n\n  <label for=\"\">\n    {{ label }}\n  </label>\n\n  <section class=\"input\">\n    <div class=\"input-wrapper\">\n\n      <div class=\"input-container\"\n      [class.disabled]=\"disabled\"\n      [class.focused]=\"input?.focused\">\n        <p>\n          From\n        </p>\n\n        <div class=\"input-wrapper\">\n          <input\n            #input\n            type=\"text\"\n            [ngModel]=\"value.start | date: 'dd/MM/yyyy'\"\n            (ngModelChange)=\"test()\"\n            [ngModelOptions]=\"{standalone: true}\"\n            [disabled]=\"disabled\"\n            (focus)=\"focused = true\"\n            (blur)=\"focused = false\">\n\n            <mat-date-range-input\n              [formGroup]=\"controlsStart\"\n              [max]=\"value.end\"\n              style=\"opacity: 0; height: 0; width: 0;\"\n              [rangePicker]=\"picker\">\n              <input  (dateInput)=\"updateValue($event.value, 'start')\" formControlName=\"start\" matStartDate type=\"text\">\n              <input  formControlName=\"end\" matEndDate disabled readonly type=\"text\">\n            </mat-date-range-input>\n            <mat-date-range-picker #picker></mat-date-range-picker>\n\n             <button\n              (click)=\"picker.open()\"\n              [disabled]=\"disabled\"\n              class=\"date-picker-icon\">\n              <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n            </button>\n\n        </div>\n\n      </div>\n\n\n\n\n\n      <section class=\"input-container\"\n        [class.disabled]=\"disabled\"\n        [class.focused]=\"input2?.focused\">\n\n        <p>\n          To\n        </p>\n\n        <div class=\"input-wrapper\">\n\n          <input\n            #input2\n            type=\"text\"\n            [ngModel]=\"value.end | date : 'dd/MM/yyyy'\"\n            (ngModelChange)=\"test()\"\n            [ngModelOptions]=\"{standalone: true}\"\n            [disabled]=\"disabled\"\n            (focus)=\"focused = true\"\n            (blur)=\"focused = false\">\n\n            <mat-date-range-input\n            [formGroup]=\"controlsEnd\"\n              [min]=\"value.start\"\n              style=\"opacity: 0;  height: 0; width: 0;\" [rangePicker]=\"picker2\">\n              <input formControlName=\"start\" matStartDate type=\"text\">\n              <input (dateInput)=\"updateValue($event.value, 'end')\" formControlName=\"end\" matEndDate type=\"text\">\n            </mat-date-range-input>\n            <mat-date-range-picker #picker2 ></mat-date-range-picker>\n\n            <button\n              (click)=\"picker2.open()\"\n              [disabled]=\"disabled\"\n              class=\"date-picker-icon\">\n              <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n            </button>\n\n        </div>\n\n      </section>\n\n\n      <section class=\"to\">\n        <p>\n          To\n        </p>\n\n        {{ value.end | date : 'dd/MM/yyyy' }}\n\n      <mat-date-range-input\n        [min]=\"value.start\"\n         style=\"opacity: 0; display: none\" [rangePicker]=\"picker2\">\n        <input  matStartDate type=\"text\">\n        <input  (dateChange)=\"updateValue($event.value, 'end')\" [value]=\"value.end\" matEndDate type=\"text\">\n      </mat-date-range-input>\n      <mat-date-range-picker #picker2 ></mat-date-range-picker>\n\n\n      </section>\n\n    </div>\n  </section>\n\n\n</!->\n\n<section\n  *ngIf=\"formControl?.invalid\"\n  class=\"errors\">\n  <p *ngFor=\"let error of formControl.errors | keyvalue\">\n    {{ error.key }}\n  </p>\n</section>\n-->\n"
        },
        {
            "name": "NewDateRangeInputComponent",
            "id": "component-NewDateRangeInputComponent-ab59ee987b2298c427317d62505721edac5620d229a99d03bc0caf12feffeb2ab697db57a8d5f325b3de17e2d66b4d85ec902d06d678891429cb02659537515e",
            "file": "src/app/components/new-date-range-input/new-date-range-input.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => NewDateRangeInputComponent)\n}",
                    "type": "component"
                }
            ],
            "selector": "app-new-date-range-input",
            "styleUrls": [
                "./new-date-range-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./new-date-range-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "endDatePicker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDateRangePicker<any>",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'picker2', {static: false}"
                        }
                    ]
                },
                {
                    "name": "secondFormId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "secondInputFocus",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "startDatePicker",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatDateRangePicker<any>",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'picker', {static: false}"
                        }
                    ]
                },
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "openEndDatePicker",
                    "args": [
                        {
                            "name": "startDate",
                            "type": "Moment",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 95,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "startDate",
                            "type": "Moment",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "stubUnusedFormGroupFunctions",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateValue",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "area",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "area",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, OnChanges, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDateRangePicker } from '@angular/material/datepicker';\nimport * as moment from 'moment';\nimport { Moment } from 'moment';\nimport { CustomFormControl } from 'src/app/components/base/base-form-input';\n\n@Component({\n  selector: 'app-new-date-range-input',\n  templateUrl: './new-date-range-input.component.html',\n  styleUrls: ['./new-date-range-input.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => NewDateRangeInputComponent)\n    }\n  ]\n})\nexport class NewDateRangeInputComponent extends CustomFormControl implements OnChanges, ControlValueAccessor {\n  readonly secondFormId: string = `${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`;\n\n  // Date range references\n  @ViewChild( 'picker', { static: false }) startDatePicker: MatDateRangePicker<any>;\n  @ViewChild( 'picker2', { static: false }) endDatePicker: MatDateRangePicker<any>;\n\n  get startControl (): FormControl {\n    return this.formControl.get('start') as FormControl;\n  }\n\n  get endControl (): FormControl {\n    return this.formControl.get('end') as FormControl;\n  }\n\n  secondInputFocus: boolean = false;\n\n  constructor() {\n    super();\n    this.stubUnusedFormGroupFunctions();\n  }\n\n  stubUnusedFormGroupFunctions (): void {\n    const keysToStub = [\n      'registerOnChange',\n      'registerOnDisabledChange',\n      '_unregisterOnChange',\n      '_unregisterOnDisabledChange'\n     ];\n\n    keysToStub.forEach(\n      (key) => this.formControl[key] = () => {}\n    );\n  }\n  // Prevent errors on formgroup here\n\n  ngOnChanges ( changes: SimpleChanges): void {\n    if ( changes.formControl ) {\n      this.customFormControl = true;\n      this.stubUnusedFormGroupFunctions();\n    }\n  }\n\n\n  updateValue(event, area) {\n\n    console.log(event);\n    console.log(area);\n    console.log(this.formControl);\n\n    if ( area === 'start' || (area === 'end' && event) ) {\n      this.value = {\n        ...this.formControl.value,\n        [area]: event,\n      }\n    }\n\n    console.log(this.value);\n\n    if ( area === 'start' ) {\n\n      this.formControl.patchValue(this.value);\n\n      this.startDatePicker.close();\n      this.openEndDatePicker(event);\n    }\n\n\n\n    if ( this.value.end && this.value.start ) {\n      this.writeValue(this.value);\n    }\n  }\n\n  openEndDatePicker( startDate: Moment ): void {\n    this.endDatePicker.open();\n    this.endDatePicker.select(moment(startDate));\n    setTimeout(() => {\n      // this.endDatePicker._applyPendingSelection();\n    })\n  }\n\n  writeValue( value: any, inputChange: boolean = false ): void {\n    this.value = value;\n\n    if (JSON.stringify(value) !== JSON.stringify(this.formControl.value) && !inputChange) {\n      this.formControl.patchValue(value, { emitEvent: false });\n   }\n\n    // On want to trigger on change if it is not a form control\n    if ( !this.customFormControl ) {\n      this.onChange?.(value);\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".date-range-inputs {\r\n\r\n  label.focused-area {\r\n    color: var(--focused-label-color) !important;\r\n  }\r\n  > .input {\r\n    border: none !important;\r\n    background: none !important;\r\n\r\n    .input-container {\r\n      display: flex;\r\n      align-items: center;\r\n      min-width: 200px;\r\n      flex: 1;\r\n\r\n      .input-wrapper {\r\n        position: relative;\r\n        background: white;\r\n        border: solid 1px var(--default-input-border);\r\n        border-radius: 4px;\r\n        padding: 6px 8px;\r\n        align-items: center;\r\n        width: 100%;\r\n        flex-wrap: wrap;\r\n        gap: 10px;\r\n        flex-wrap: nowrap !important;\r\n        outline: solid 2px transparent;\r\n\r\n        input {\r\n          width: 100%;\r\n        }\r\n        button {\r\n          background: none;\r\n          outline: none;\r\n          border: none;\r\n\r\n          i {\r\n            color: #333;\r\n            transition: all 0.175s ease-in-out;\r\n          }\r\n\r\n          &:hover {\r\n            cursor: pointer;\r\n            i {\r\n              color: var(--form-input-color);\r\n            }\r\n          }\r\n\r\n          &:focus {\r\n            i {\r\n              color: var(--form-input-color);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &.focused {\r\n        label {\r\n          color: var(--focused-label-color) !important;\r\n        }\r\n\r\n        .input-wrapper {\r\n          outline: solid 2px var(--outline-color);\r\n          border-color: var(--focused-input-border);\r\n        }\r\n      }\r\n\r\n      > label {\r\n        margin-right: 8px;\r\n        font-size: 14px;\r\n        text-align: right;\r\n        min-width: 30px;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n// Hide the actual date range input\r\nmat-date-range-input {\r\n  height: 0;\r\n  width: 100%;\r\n  opacity: 0;\r\n  position: absolute;\r\n  bottom: 0;\r\n}\r\n",
                    "styleUrl": "./new-date-range-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 36
            },
            "extends": "CustomFormControl",
            "implements": [
                "OnChanges",
                "ControlValueAccessor"
            ],
            "accessors": {
                "startControl": {
                    "name": "startControl",
                    "getSignature": {
                        "name": "startControl",
                        "type": "",
                        "returnType": "FormControl",
                        "line": 28
                    }
                },
                "endControl": {
                    "name": "endControl",
                    "getSignature": {
                        "name": "endControl",
                        "type": "",
                        "returnType": "FormControl",
                        "line": 32
                    }
                }
            },
            "templateData": "\n  <section\n    class=\"form-input date-range-inputs\">\n\n  <label\n    [class.focused-area]=\"focused || secondInputFocus\"\n    [for]=\"formId\">\n    {{ label }}\n  </label>\n\n  <section class=\"input\">\n    <div class=\"input-wrapper\">\n\n      <div class=\"input-container\"\n        [class.disabled]=\"disabled\"\n        [class.focused]=\"focused\">\n          <label [for]=\"formId\">\n            From\n          </label>\n\n          <div class=\"input-wrapper\">\n            <input\n              #input\n              type=\"text\"\n              [id]=\"formId\"\n              [ngModel]=\"formControl.value.start | date: 'dd/MM/yyyy'\"\n              [ngModelOptions]=\"{standalone: true}\"\n              [disabled]=\"disabled\"\n              (focus)=\"focused = true\"\n              (blur)=\"focused = false\">\n\n              <mat-date-range-input\n                tabindex=\"-1\"\n                [max]=\"formControl.value.end\"\n                [rangePicker]=\"picker\">\n                <input\n                tabindex=\"-1\"\n                [value]=\"formControl.value.start\"\n                (dateInput)=\"updateValue($event.value, 'start')\"\n                matStartDate type=\"text\">\n                <input\n                  tabindex=\"-1\"\n              [value]=\"formControl.value.end\"\n\n                  matEndDate disabled readonly type=\"text\">\n              </mat-date-range-input>\n              <mat-date-range-picker #picker></mat-date-range-picker>\n\n              <button\n                (click)=\"picker.open()\"\n                [disabled]=\"disabled\"\n                class=\"date-picker-icon\">\n                <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n              </button>\n\n          </div>\n\n      </div>\n\n      <section class=\"input-container\"\n        [class.disabled]=\"disabled\"\n        [class.focused]=\"secondInputFocus\">\n        <label [for]=\"secondFormId\">\n          To\n        </label>\n\n        <div class=\"input-wrapper\">\n          <input\n            #input2\n            type=\"text\"\n            [id]=\"secondFormId\"\n            [ngModel]=\"formControl.value.end | date : 'dd/MM/yyyy'\"\n            [ngModelOptions]=\"{standalone: true}\"\n            [disabled]=\"disabled\"\n            (focus)=\"secondInputFocus = true\"\n            (blur)=\"secondInputFocus = false\">\n\n            <mat-date-range-input\n              tabindex=\"-1\"\n              [min]=\"formControl.value.start\"\n              [rangePicker]=\"picker2\">\n              <input\n              tabindex=\"-1\"\n              disabled readonly\n              [value]=\"formControl.value.start\"\n              matStartDate type=\"text\">\n              <input\n              tabindex=\"-1\"\n              [value]=\"formControl.value.end\"\n              (dateInput)=\"updateValue($event.value, 'end')\" matEndDate type=\"text\">\n            </mat-date-range-input>\n            <mat-date-range-picker #picker2 ></mat-date-range-picker>\n\n            <button\n              (click)=\"picker2.open()\"\n              [disabled]=\"disabled\"\n              class=\"date-picker-icon\">\n              <i class=\"fa fa-calendar\" aria-hidden=\"true\"></i>\n            </button>\n        </div>\n      </section>\n    </div>\n  </section>\n\n\n<section\n  *ngIf=\"formControl?.invalid\"\n  class=\"errors\">\n  <p *ngFor=\"let error of formControl.errors | keyvalue\">\n    {{ error.key }}\n  </p>\n</section>\n\n"
        },
        {
            "name": "NumberInputComponent",
            "id": "component-NumberInputComponent-066e170fbbf8148008dd9b966712462b2b2d314ecb92a6c3e65ac04e29134948c4c396364f1915f9010c82d989a3ee80e92f4c2db54018c1b892f0f9492a159f",
            "file": "src/app/components/number-input/number-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => NumberInputComponent)\n}",
                    "type": "component"
                }
            ],
            "selector": "app-number-input",
            "styleUrls": [
                "./number-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./number-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "format",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "checkFormat",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "checkInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CustomFormControl } from 'src/app/components/base/base-form-input';\n\n@Component({\n  selector: 'app-number-input',\n  templateUrl: './number-input.component.html',\n  styleUrls: ['./number-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => NumberInputComponent)\n    }\n  ]\n})\nexport class NumberInputComponent extends CustomFormControl implements ControlValueAccessor {\n\n  @Input() format: string;\n\n  constructor() {\n    super();\n  }\n\n  writeValue( value: any, inputChange: boolean = false ): void {\n    const decimalMax = this.format?.substring(1, this.format?.length);\n\n    if ( decimalMax ) {\n      value = parseFloat(`${value}`).toFixed(parseInt(decimalMax));\n    }\n\n    if (value !== `${this.formControl.value}` && !inputChange) {\n      this.formControl.setValue(`${value}`, { emitEvent: false });\n    }\n\n    this.value = value;\n    if ( !this.customFormControl ) {\n      this.onChange?.(value);\n    }\n  }\n\n  checkFormat(): void {\n    const decimalMax = this.format?.substring(1, this.format.length);\n\n    if ( this.value === '' || !this.value && this.defaultValue ) {\n      this.value = this.defaultValue;\n    }\n\n    let value = this.value;\n\n    if ( decimalMax && `${this.formControl.value}` !== parseFloat(`${value}`).toFixed(parseInt(decimalMax))) {\n      this.value = parseFloat(`${value}`).toFixed(parseInt(decimalMax));\n      this.formControl.setValue(parseFloat(`${value}`).toFixed(parseInt(decimalMax)));\n    }\n  }\n\n  checkInput(event): boolean {\n    if ([46, 8, 9, 27, 13, 110, 190].indexOf(event.keyCode) !== -1 ||\n        // Allow: Ctrl+A\n        (event.keyCode === 65 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+C\n        (event.keyCode === 67 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+V\n        (event.keyCode === 86 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: Ctrl+X\n        (event.keyCode === 88 && (event.ctrlKey || event.metaKey)) ||\n        (event.keyCode === 90 && (event.ctrlKey || event.metaKey)) ||\n        // Allow: home, end, left, right\n        (event.keyCode >= 35 && event.keyCode <= 39)) {\n          // let it happen, don't do anything\n          return true;\n        }\n        // Ensure that it is a number and stop the keypress\n        if ((event.shiftKey || (event.keyCode < 48 || event.keyCode > 57)) && (event.keyCode < 96 || event.keyCode > 105)) {\n            event.preventDefault();\n        }\n\n\n    return true;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./number-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "extends": "CustomFormControl",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<section\n  class=\"form-input\"\n  [class.disabled]=\"disabled\"\n  [class.focused]=\"focused\"\n    [class.invalid]=\"formControl?.invalid && (formControl.touched || submitAttempt)\"\n>\n\n  <label [for]=\"formId\">\n    {{ label }}\n  </label>\n\n\n  <section class=\"input\">\n\n    <p *ngIf=\"prefix\">\n      {{ prefix }}\n    </p>\n    <div class=\"input-wrapper\">\n      <input\n        #input\n        type=\"text\"\n        [formControl]=\"formControl\"\n        [disabled]=\"disabled\"\n        [id]=\"formId\"\n        (keyup)=\"writeValue($event.target.value, true)\"\n        (keydown)=\"checkInput($event)\"\n        (focus)=\"onTouched(); focused = true\"\n        (blur)=\"checkFormat(); onTouched(); focused = false\">\n\n        <p class=\"suffix-placeholder\" *ngIf=\"suffix\">{{ suffix }} </p>\n        <div\n          *ngIf=\"suffix\"\n           class=\"suffix-overlay\">\n          <p>{{input.value}}</p>\n          <p>\n            {{ suffix }}\n          </p>\n        </div>\n    </div>\n  </section>\n\n</section>\n\n<section\n*ngIf=\"formControl?.invalid && (formControl.touched || submitAttempt)\"\n  class=\"errors\">\n  <p *ngFor=\"let error of formControl.errors | keyvalue\">\n    {{ error.key }}\n  </p>\n</section>\n\n\n<section\n  *ngIf=\"debug\"\n  class=\"debug-items\">\n\n\n  <div class=\"data-item\">\n    <p>Value</p>\n    <p>{{ formControl.value || value }}</p>\n  </div>\n\n</section>\n"
        },
        {
            "name": "SelectInputComponent",
            "id": "component-SelectInputComponent-ea1f52ef4e9479ddf5d6acb14bc445ee4b28be6785f948fed08c39551729bb63ea5b4aaa35cc4d5c963a904981d4756e516f46c86d164ea2bb377fa363c45e1a",
            "file": "src/app/components/select-input/select-input.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => SelectInputComponent)\n}",
                    "type": "component"
                }
            ],
            "selector": "app-select-input",
            "styleUrls": [
                "./select-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./select-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "bindLabel",
                    "defaultValue": "'description'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "bindValue",
                    "defaultValue": "'id'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "checkBoxSelect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "clearable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "closeDropdownOnSelect",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "dropdownPosition",
                    "defaultValue": "'auto'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "DropdownPosition",
                    "decorators": []
                },
                {
                    "name": "dropdownWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "groupByFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "groupedList",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "groupName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "groupValueFn",
                    "defaultValue": "(groupHeading: string) => {\n    return groupHeading;\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "labelFormatter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "function",
                    "decorators": []
                },
                {
                    "name": "multiSelect",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "selectOptions",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "showRemoveIcon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "templateName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "useFirstValueAsDefault",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "outputsClass": [
                {
                    "name": "removeRow",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "selectReference",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgSelectComponent",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'select', {static: false}"
                        }
                    ]
                },
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "checkIfDefaultNeedsSetting",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleOpen",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleUserSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "openSelectMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 121,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validateSelectionsExistInList",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, forwardRef, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DropdownPosition, NgSelectComponent } from '@ng-select/ng-select';\nimport { CustomFormControl } from 'src/app/components/base/base-form-input';\n\n@Component({\n  selector: 'app-select-input',\n  templateUrl: './select-input.component.html',\n  styleUrls: ['./select-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SelectInputComponent)\n    }\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class SelectInputComponent extends CustomFormControl implements OnInit, OnChanges, ControlValueAccessor {\n\n  @ViewChild( 'select', { static: false }) selectReference: NgSelectComponent;\n\n  // Display based variables\n  @Input() bindValue: string = 'id';\n  @Input() bindLabel: string = 'description';\n  @Input() showRemoveIcon: boolean = false;\n  @Input() templateName: string;\n  @Input() closeDropdownOnSelect: boolean = true;\n  @Input() labelFormatter: ( item: any ) => string;\n\n  // Grouping handlers\n  @Input() groupedList: boolean = false;\n  @Input() groupName: string;\n  @Input() groupByFn: (value) => string;\n  @Input() groupValueFn: (string) => string = (groupHeading: string) => {\n    return groupHeading;\n  }\n\n  // Input method variables\n  @Input() multiSelect: boolean = false;\n  @Input() checkBoxSelect: boolean = false;\n  @Input() clearable: boolean = true;\n  @Input() useFirstValueAsDefault: boolean = false;\n\n  // Dropdown impacting variables\n  @Input() dropdownPosition: DropdownPosition = 'auto';\n  @Input() dropdownWidth: string;\n  @Input() selectOptions: any[] = [];\n\n  // Outputs\n  @Output() removeRow: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit (): void {\n    this.checkIfDefaultNeedsSetting();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ( changes.selectOptions ) {\n      this.validateSelectionsExistInList();\n      this.checkIfDefaultNeedsSetting();\n    }\n  }\n\n  validateSelectionsExistInList (): void {\n    if ( !this.formControl.value || !this.selectOptions || this.selectOptions?.length === 0 ) return;\n\n    const optionChecker = ( value ) => this.selectOptions.find(option => {\n      const optionValue = this.bindValue ? option[this.bindValue] : option;\n      return JSON.stringify(optionValue) === JSON.stringify(value);\n    });\n\n    if ( this.multiSelect ) {\n      const filteredValue = this.formControl.value\n        .filter((value) =>{\n          return optionChecker(value);\n        });\n\n      if ( filteredValue.length !== this.formControl.value.length ) {\n        this.formControl.setValue(filteredValue);\n      }\n\n      return;\n    } else {\n      const validOption = optionChecker(this.formControl.value);\n\n      if ( !validOption ) {\n        this.formControl.setValue(undefined);\n      }\n    }\n  }\n\n  checkIfDefaultNeedsSetting (): void {\n    if (\n      this.useFirstValueAsDefault\n      && this.selectOptions?.length\n      && (!this.formControl.value || this.formControl.value.length === 0)\n    ) {\n      this.defaultValue = this.selectOptions[0];\n      this.value = this.multiSelect ? [this.defaultValue] : this.defaultValue;\n      this.formControl.setValue(this.value);\n    }\n  }\n\n  onBlur(): void {\n    this.focused = false;\n    const noValue = this.value === ''\n     || this.value === undefined\n     || this.value === null\n     || this.value?.length === 0;\n\n    if ( noValue && this.defaultValue !== undefined  ) {\n      this.value = this.multiSelect ? [this.defaultValue] : this.defaultValue;\n      this.formControl.setValue(this.value);\n    }\n  }\n\n  openSelectMenu (): void {\n    if ( this.selectReference?.isOpen ) {\n      this.selectReference.close();\n    } else {\n      this.selectReference.open();\n    }\n  }\n\n  handleUserSearch (): void {\n    const dropdownId: string = this.selectReference.dropdownId;\n    const dropdownPanel: HTMLElement = document.getElementById(dropdownId);\n\n    if ( dropdownPanel ) {\n      dropdownPanel.scrollTop = 0;\n    }\n  }\n\n  handleOpen(): void {\n    if ( !this.dropdownWidth ) {\n      return;\n    }\n\n    // SetTimeout required so that the ng-select has rendered!\n    setTimeout(() => {\n      const dropdownId: string = this.selectReference.dropdownId;\n      const dropdownPanel: HTMLElement = document.getElementById(dropdownId);\n      dropdownPanel.style.width = this.dropdownWidth;\n    });\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"@ng-select/ng-select/themes/default.theme.css\";\r\n\r\n.select-input-container {\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n\r\n  > .select {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n\r\n  .label-text {\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    z-index: 199;\r\n  }\r\n\r\n\r\n  > .select-actions > .remove-row-icon {\r\n    border: none;\r\n    background-color: var(--error);\r\n    color: white;\r\n    margin-left: 8px;\r\n    border-radius: 4px;;\r\n    width: 35px;\r\n    height: 35px;\r\n    margin-bottom: 12px;\r\n    transition: all 0.175s ease-out;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      background-color: var(--error-300);\r\n    }\r\n  }\r\n}\r\n\r\nng-select {\r\n  width: 100%;\r\n  min-height: 35px;\r\n\r\n  .ng-select-container {\r\n    border: none !important;\r\n    outline: none !important;\r\n    box-shadow: none !important;\r\n    padding: 6px 0 6px 0;\r\n    background-color: transparent !important;\r\n    overflow: hidden;\r\n\r\n    .ng-value-container {\r\n      max-width: calc(100% - 20px);\r\n      overflow: hidden;\r\n\r\n      .ng-value {\r\n        overflow: hidden;\r\n        display: flex;\r\n        max-width: 95%;\r\n\r\n        .ng-value-label {\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n          max-width: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  input,\r\n  .ng-value-label {\r\n    font-size: 15px;\r\n    line-height: 21px;\r\n    font-family: 'Roboto', sans-serif;\r\n  }\r\n\r\n  .ng-dropdown-panel {\r\n    .ng-option {\r\n      display: flex !important;\r\n      font-size: 15px;\r\n      line-height: 21px;\r\n      font-family: 'Roboto', sans-serif;\r\n\r\n      mat-checkbox {\r\n        margin-right: 12px;\r\n\r\n        &.mat-checkbox-checked {\r\n          .mat-checkbox-background{\r\n            background-color: var(--form-input-color) !important;\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      > div {\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n      }\r\n\r\n\r\n\r\n      &.ng-option-selected {\r\n        background-color: var(--form-input-color-600) !important;\r\n      }\r\n\r\n      &.ng-option-marked {\r\n        background-color: var(--form-input-color-300) !important;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n\r\n.select.input {\r\n  padding: 0;\r\n}\r\n\r\n\r\ndiv[role=\"combobox\"] {\r\n  height: 100% !important;\r\n  top: 0 !important;\r\n\r\n  > input {\r\n    height: 100%;\r\n    line-height: 21px;\r\n  }\r\n}\r\n\r\n\r\n// Multi select styles\r\n\r\n\r\n.ng-select-multiple {\r\n  .ng-select-container {\r\n    padding: 0 !important;\r\n    min-height: 35px !important;\r\n\r\n    .ng-value-container {\r\n      padding-top: 0 !important;\r\n\r\n      .ng-value {\r\n        margin: 2px 4px !important;\r\n        margin-top: 4px;\r\n        background-color: var(--form-input-color-600) !important;\r\n\r\n        .ng-value-icon.right {\r\n          border-left: solid 1px var(--form-input-color-300) !important;\r\n\r\n          &:hover {\r\n            background-color: var(--form-input-color-300);\r\n          }\r\n        }\r\n\r\n        .ng-value-label {\r\n          color: #333;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./select-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 51
            },
            "extends": "CustomFormControl",
            "implements": [
                "OnInit",
                "OnChanges",
                "ControlValueAccessor"
            ],
            "templateData": "<section\n  class=\"form-input\"\n  [class.disabled]=\"disabled\"\n  [class.focused]=\"select?.focused\"\n  [class.invalid]=\"formControl?.invalid && (formControl.touched || submitAttempt)\">\n\n  <label [for]=\"formId\">\n    {{ label }}\n  </label>\n\n  <div class=\"select-input-container\">\n    <section class=\"select input\">\n\n      <p *ngIf=\"prefix\">\n        {{ prefix }}\n      </p>\n      <div class=\"input-wrapper\">\n        <ng-select\n          #select\n          [labelForId]=\"formId\"\n          [ngModel]=\"formControl.value\"\n          (ngModelChange)=\"writeValue($event)\"\n          [items]=\"selectOptions\"\n          [bindLabel]=\"bindLabel\"\n          [bindValue]=\"bindValue\"\n          [virtualScroll]=\"true\"\n          [disabled]=\"disabled\"\n          [multiple]=\"multiSelect\"\n          [clearable]=\"clearable\"\n          [dropdownPosition]=\"dropdownPosition\"\n          [groupBy]=\"groupedList ? groupByFn || groupName : undefined\"\n          [groupValue]=\"groupedList ? groupValueFn : undefined\"\n          (search)=\"handleUserSearch()\"\n          (open)=\"handleOpen()\"\n          (blur)=\"onBlur()\"\n          (focus)=\"formControl.markAsTouched(); focused = true\">\n\n          <ng-template\n            *ngIf=\"templateName === undefined\"\n            ng-label-tmp let-item=\"item\" let-clear=\"clear\">\n            <span class=\"ng-value-label\">\n              {{\n                bindLabel ?\n                  item[bindLabel] || 'None'\n                  : item || 'None'\n              }}\n          </span>\n            <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">×</span>\n          </ng-template>\n\n\n\n          <!-- Select group heading -->\n          <ng-template ng-optgroup-tmp let-item=\"item\">\n            <div\n              #optGroupHolder\n              showToolTip\n              class=\"mat-optgroup-label acu-select-group-heading\"\n              [matTooltip]=\"item\"\n              [matTooltipDisabled]=\"optGroupHolder.tooltipDisabled\"\n              matTooltipClass=\"acu-select-tooltip\">\n                <span\n                  #optGroup>\n                  {{ item }}\n                </span>\n            </div>\n          </ng-template>\n          <!-- Select options -->\n\n\n          <ng-template\n            ng-option-tmp\n            *ngIf=\"templateName === undefined\"\n            let-item=\"item\"\n            let-item$=\"item$\"\n            let-showToolTip=\"showtTooltip\"\n            let-index=\"index\">\n            <mat-checkbox\n              *ngIf=\"checkBoxSelect\"\n              [disabled]=\"true\"\n              [checked]=\"item$.selected\">\n            </mat-checkbox>\n\n            <div\n              #optionHolder\n              showToolTip\n              class=\"mat-option-text\"\n              [matTooltip]=\"( labelFormatter ? labelFormatter(item) : item[ bindLabel ] )\"\n              [matTooltipDisabled]=\"optionHolder.tooltipDisabled\"\n              matTooltipClass=\"acu-select-tooltip\"\n            >\n              <span #option\n                [stringHighlight]=\"select.searchTerm\">\n                    {{ labelFormatter\n                      ? labelFormatter(item)\n                        : ( bindLabel ? item[ bindLabel ] : item ) }}\n              </span>\n            </div>\n          </ng-template>\n\n        </ng-select>\n      </div>\n\n\n    </section>\n\n    <section class=\"select-actions\">\n      <!-- Pass in custom select actions -->\n      <ng-content select=\"selectActions\"></ng-content>\n      <button\n        *ngIf=\"showRemoveIcon\"\n        matTooltip=\"Remove row\"\n        class=\"remove-row-icon\"\n        (click)=\"removeRow.emit()\">\n        <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n      </button>\n    </section>\n\n  </div>\n\n\n</section>\n<section\n*ngIf=\"formControl?.invalid && (formControl.touched || submitAttempt)\"\nclass=\"errors\">\n  <p *ngFor=\"let error of formControl.errors | keyvalue\">\n    {{ error.key }}\n  </p>\n</section>\n"
        },
        {
            "name": "SliderInputComponent",
            "id": "component-SliderInputComponent-ff2ce8db5f283305dfb1733bbfbf210aba3ca93b1b700e498a56be0d1b0813a946f38856aab00a3a740a12df689a1e19138fcbd2509510d4a67e6aef46d066ad",
            "file": "src/app/components/slider-input/slider-input.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => SliderInputComponent)\n}",
                    "type": "component"
                }
            ],
            "selector": "app-slider-input",
            "styleUrls": [
                "./slider-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./slider-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "max",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "steps",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "inputValue",
                    "defaultValue": "this.formControl.value || 0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, Input, ViewEncapsulation } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CustomFormControl } from 'src/app/components/base/base-form-input';\n\n@Component({\n  selector: 'app-slider-input',\n  templateUrl: './slider-input.component.html',\n  styleUrls: ['./slider-input.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => SliderInputComponent )\n    }\n  ]\n})\nexport class SliderInputComponent extends CustomFormControl {\n\n\n  @Input() min: number = 0;\n\n  @Input() max: number = 100;\n\n  @Input() steps: number = 1;\n\n  inputValue: number = this.formControl.value || 0;\n\n  constructor() {\n    super();\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-slider-input  {\r\n  mat-slider.custom-mat-slider {\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    padding: 0 !important;\r\n    height: 35px;\r\n    padding: 6px 8px !important;\r\n\r\n    .mat-slider-wrapper {\r\n      top: 17px;\r\n    }\r\n\r\n    .input {\r\n      overflow: hidden;\r\n      position: relative;\r\n    }\r\n\r\n    .mat-slider-thumb {\r\n      border-radius: 4px !important;\r\n\r\n      height: 25px !important;\r\n      bottom: -13px !important;\r\n      &:before {\r\n        content: '';\r\n        position: absolute;\r\n        width: 4000px;\r\n        background-color: var(--form-input-color-600);\r\n        height: 80px;\r\n        top: -30px;\r\n        left: -3990px;\r\n      }\r\n\r\n      &:after {\r\n        content: '';\r\n        position: absolute;\r\n        width: 20px;\r\n        border-radius: 4px;;\r\n        background-color: var(--form-input-color);\r\n        height: 25px;\r\n        top: -3px;\r\n        left: -3px;\r\n      }\r\n    }\r\n\r\n    .mat-slider-sliding {\r\n      .mat-slider-thumb {\r\n        &:after{\r\n          content: '';\r\n          position: absolute;\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  .mat-accent .mat-slider-track-fill, .mat-accent .mat-slider-thumb, .mat-accent .mat-slider-thumb-label\r\n  {\r\n    background-color: var(--form-input-color);\r\n  }\r\n\r\n  .input-wrapper {\r\n    overflow: hidden;\r\n  }\r\n  &.full-selection {\r\n    .mat-slider-thumb {\r\n      &:before {\r\n        left: -3800px !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.no-selection {\r\n    .mat-slider-thumb {\r\n      &:before {\r\n        left: -4100px !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .input {\r\n    padding: 0 !important;\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./slider-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 27
            },
            "extends": "CustomFormControl",
            "templateData": "<section\n  class=\"form-input app-slider-input\"\n  [class.disabled]=\"disabled\"\n  [class.full-selection]=\"inputValue === max\"\n  [class.no-selection]=\"inputValue === min\"\n  [class.invalid]=\"formControl?.invalid && (formControl.touched || submitAttempt)\"\n  [class.focused]=\"focused && !disabled\">\n\n  <label *ngIf=\"showLabel\" [for]=\"formId\">\n    {{ label }}\n  </label>\n\n  <section class=\"input\">\n\n    <div class=\"input-wrapper\">\n      <mat-slider\n        #slider\n        [id]=\"formId\"\n        class=\"custom-mat-slider\"\n        [disabled]=\"disabled\"\n        [formControl]=\"formControl\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [step]=\"steps\"\n        [tickInterval]=\"10\"\n        (focus)=\"onTouched(); focused = true\"\n        (blur)=\"onBlur()\"\n        (input)=\"inputValue = $event.value\"\n        (change)=\"writeValue($event.value, true); slider.blur()\">\n      </mat-slider>\n    </div>\n\n  </section>\n  <!-- If you want to add labels etc to the bottom of the slider! -->\n  <ng-content></ng-content>\n\n</section>\n\n<section\n  *ngIf=\"formControl?.invalid && (formControl.touched || submitAttempt)\"\n  class=\"errors\">\n  <p *ngFor=\"let error of formControl.errors | keyvalue\">\n    {{ error.key }}\n  </p>\n</section>\n<section\n  *ngIf=\"debug\"\n  class=\"debug-items\">\n\n\n  <div class=\"data-item\">\n    <p>Value</p>\n    <p>{{ formControl.value || value }}</p>\n  </div>\n\n  <div class=\"data-item\">\n    <p>Slider value</p>\n    <p>{{ inputValue }}</p>\n  </div>\n</section>\n"
        },
        {
            "name": "TextAreaComponent",
            "id": "component-TextAreaComponent-2a6660d5734eca0656e303c0a5bdea2accdff77b69354d2c3d13fd5cbad5a9626beb92d4f27add7e233aeeee4d37d19d6637fdf6d01293b173a533e9ae730298",
            "file": "src/app/components/text-area/text-area.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => TextAreaComponent)\n}",
                    "type": "component"
                }
            ],
            "selector": "app-text-area",
            "styleUrls": [
                "./text-area.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-area.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CustomFormControl } from 'src/app/components/base/base-form-input';\n\n@Component({\n  selector: 'app-text-area',\n  templateUrl: './text-area.component.html',\n  styleUrls: ['./text-area.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => TextAreaComponent)\n    }\n  ]\n})\nexport class TextAreaComponent extends CustomFormControl implements ControlValueAccessor {\n\n  constructor() {\n    super();\n   }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "textarea {\r\n  width: 100%;\r\n  border: none;\r\n  font-family: 'Roboto', sans-serif;\r\n  outline: none;\r\n  color: black;\r\n  line-height: 24px;\r\n  font-size: 18px;\r\n  resize: vertical;\r\n  min-height: 60px;\r\n\r\n}\r\n",
                    "styleUrl": "./text-area.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": "CustomFormControl",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<section\n  class=\"form-input\"\n  [class.disabled]=\"disabled\"\n  [class.invalid]=\"formControl?.invalid && (formControl.touched || submitAttempt)\"\n  [class.focused]=\"focused\">\n\n  <label [for]=\"formId\">\n    {{ label }}\n  </label>\n\n  <section class=\"input\">\n    <div class=\"input-wrapper\">\n      <textarea\n        #input\n        type=\"text\"\n        [id]=\"formId\"\n        [formControl]=\"formControl\"\n        [disabled]=\"disabled\"\n        (keyup)=\"writeValue($event.target.value, true)\"\n        (focus)=\"onTouched(); focused = true;\"\n        (blur)=\"onBlur()\">\n      </textarea>\n    </div>\n  </section>\n\n</section>\n\n<section\n  *ngIf=\"formControl?.invalid && (formControl.touched || submitAttempt)\"\n  class=\"errors\">\n  <p *ngFor=\"let error of formControl.errors | keyvalue\">\n    {{ error.key }}\n  </p>\n</section>\n"
        },
        {
            "name": "TextInputComponent",
            "id": "component-TextInputComponent-3ecf049dffd980687bf947eda647470f57d75693d0ab989fe48e1d947419f0b5353398211b143871f9fee875ed7daa722d8a7df5efb7694f77811ba842522379",
            "file": "src/app/components/text-input/text-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TextInputComponent), multi: true\n}",
                    "type": "component"
                }
            ],
            "selector": "app-text-input",
            "styleUrls": [
                "./text-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CustomFormControl } from 'src/app/components/base/base-form-input';\n\n@Component({\n  selector: 'app-text-input',\n  templateUrl: './text-input.component.html',\n  styleUrls: ['./text-input.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TextInputComponent),\n      multi: true\n    }\n  ]\n})\nexport class TextInputComponent extends CustomFormControl implements ControlValueAccessor {\n\n\n  constructor() {\n    super();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./text-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": "CustomFormControl",
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<section\n  class=\"form-input\"\n  [class.disabled]=\"disabled\"\n  [class.invalid]=\"formControl?.invalid && (formControl.touched || submitAttempt)\"\n  [class.focused]=\"focused\">\n\n  <label [for]=\"formId\">\n    {{ label }}\n  </label>\n\n  <section class=\"input\">\n\n    <p *ngIf=\"prefix\">\n      {{ prefix }}\n    </p>\n    <div class=\"input-wrapper\">\n      <input\n        #input\n        [id]=\"formId\"\n        type=\"text\"\n        [formControl]=\"formControl\"\n        [disabled]=\"disabled\"\n        (keyup)=\"writeValue($event.target.value, true)\"\n        (focus)=\"onTouched(); focused = true\"\n        (blur)=\"onBlur()\">\n\n        <p class=\"suffix-placeholder\" *ngIf=\"suffix\">{{ suffix }} </p>\n        <div\n          *ngIf=\"suffix\"\n           class=\"suffix-overlay\">\n          <p>{{input.value}}</p>\n          <p>\n            {{ suffix }}\n          </p>\n        </div>\n    </div>\n  </section>\n</section>\n\n<section\n  *ngIf=\"formControl?.invalid && (formControl.touched || submitAttempt)\"\n  class=\"errors\">\n  <p *ngFor=\"let error of formControl.errors | keyvalue\">\n    {{ error.key }}\n  </p>\n</section>\n\n<section\n  *ngIf=\"debug\"\n  class=\"debug-items\">\n\n  <div class=\"data-item\">\n    <p>Value</p>\n    <p>{{ formControl.value || value }}</p>\n  </div>\n</section>\n"
        },
        {
            "name": "ToggleSlideComponent",
            "id": "component-ToggleSlideComponent-8971fb334199ea2e3149e33b97746a4a353cb150bfe8b31654de1ab92cb6f4a757706238c9afb80a97f5a7500904a1764ca708bcdbe30d098ad73ca5e4e2ac62",
            "file": "src/app/components/toggle-slide/toggle-slide.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, multi: true, useExisting: forwardRef(() => ToggleSlideComponent)\n}",
                    "type": "component"
                }
            ],
            "selector": "app-toggle-slide",
            "styleUrls": [
                "./toggle-slide.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./toggle-slide.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "customErrorMessages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Record<string | string | >",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "debug",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "defaultValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "any",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "fieldDisabledOverride",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "AbstractControl",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "submitAttempt",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": [],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "customFormControl",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "focused",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "formId",
                    "defaultValue": "`${Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))}`",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        144
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "showToolTip",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "tooltipEnabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "onBlur",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 100,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "inputChange",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "false",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "CustomFormControl"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, forwardRef, OnInit } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CustomFormControl } from 'src/app/components/base/base-form-input';\n\n@Component({\n  selector: 'app-toggle-slide',\n  templateUrl: './toggle-slide.component.html',\n  styleUrls: ['./toggle-slide.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => ToggleSlideComponent)\n    }\n  ]\n})\nexport class ToggleSlideComponent extends CustomFormControl implements OnInit, ControlValueAccessor {\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".input {\r\n  border: none !important;\r\n}\r\n",
                    "styleUrl": "./toggle-slide.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "extends": "CustomFormControl",
            "implements": [
                "OnInit",
                "ControlValueAccessor"
            ],
            "templateData": "<section\n  class=\"form-input\"\n  [class.disabled]=\"disabled\"\n  [class.focused]=\"focused\">\n\n  <section class=\"input\">\n\n    <div class=\"input-wrapper\">\n\n      <mat-slide-toggle\n          class=\"example-margin\"\n          [formControl]=\"formControl\"\n          (change)=\"writeValue($event.checked, true)\"\n          [disabled]=\"disabled\">\n          {{ label }}\n      </mat-slide-toggle>\n    </div>\n  </section>\n\n</section>\n\n<section\n  *ngIf=\"formControl?.invalid\"\n  class=\"errors\">\n  <p *ngFor=\"let error of formControl.errors | keyvalue\">\n    {{ error.key }}\n  </p>\n</section>\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-b98fbdede64b50c58d0d4b1fa3f6c91afe9501164366d11aef1a1af463969f516fc04f88aaca6b0b367a41796bd8f05b2281ea52100d4ba6d4e7d1c95ac756e1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DatePickerModule } from 'src/app/components/date-picker/date-picker.module';\nimport { DateRangeInputModule } from 'src/app/components/date-range-input/date-range-input.module';\nimport { NumberInputModule } from 'src/app/components/number-input/number-input.module';\nimport { SelectInputModule } from 'src/app/components/select-input/select-input.module';\nimport { SliderInputModule } from 'src/app/components/slider-input/slider-input.module';\nimport { TextAreaModule } from 'src/app/components/text-area/text-area.module';\nimport { TextInputModule } from 'src/app/components/text-input/text-input.module';\nimport { ToggleSlideModule } from 'src/app/components/toggle-slide/toggle-slide.module';\nimport { showToolTipDirective } from 'src/app/directives/showTooltip';\nimport { HighlightDirective } from 'src/app/directives/string-highlight';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    showToolTipDirective,\n    HighlightDirective,\n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TextInputModule,\n    NumberInputModule,\n    SelectInputModule,\n    TextAreaModule,\n    DatePickerModule,\n    SliderInputModule,\n    ToggleSlideModule,\n    DateRangeInputModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "HighlightDirective"
                        },
                        {
                            "name": "showToolTipDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DatePickerModule"
                        },
                        {
                            "name": "DateRangeInputModule"
                        },
                        {
                            "name": "NumberInputModule"
                        },
                        {
                            "name": "SelectInputModule"
                        },
                        {
                            "name": "SliderInputModule"
                        },
                        {
                            "name": "TextAreaModule"
                        },
                        {
                            "name": "TextInputModule"
                        },
                        {
                            "name": "ToggleSlideModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DatePickerModule",
            "id": "module-DatePickerModule-d23a13e3ff02fb841a318663e8219b051f08f640408d6c26439aaffad8dfbd378fe6feaf67a7910dfb026cd258a3713a794e7667c7ffdd006cc1a5a9c3789865",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/date-picker/date-picker.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatMomentDateModule, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { DatePickerComponent } from './date-picker.component';\n\n\n\n@NgModule({\n  declarations: [\n    DatePickerComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatDatepickerModule,\n    MatMomentDateModule\n  ],\n  exports: [\n    DatePickerComponent,\n  ],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'en-GB'},\n    {provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: {useUtc: true}}\n  ]\n})\nexport class DatePickerModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DatePickerComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DatePickerComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DateRangeInputModule",
            "id": "module-DateRangeInputModule-26f48432836a7bd7d863c24510c4ddca6bc47270ab92d8f0ab242f99c19426090f85b2218c993ae2ace5ec4f396d857cf9b5cd2c48fd42a6b731428ec104fba8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/date-range-input/date-range-input.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatMomentDateModule, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { DateRangeInputComponent } from './date-range-input.component';\n\n\n\n@NgModule({\n  declarations: [\n    DateRangeInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatFormFieldModule,\n    MatMomentDateModule,\n  ],\n  exports: [\n    DateRangeInputComponent,\n  ],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'en-GB'},\n    {provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: {useUtc: true}}\n  ]\n})\nexport class DateRangeInputModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "DateRangeInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "DateRangeInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NewDateRangeInputModule",
            "id": "module-NewDateRangeInputModule-5e603d6c8417c5fcdb8b0b087cc9667489dca19eb0a2605a32f6ecd4a7501fc09d78319fbb103b69ccd94565b8d7fedd55c07202f153477249240794898837e4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/new-date-range-input/new-date-range-input.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatMomentDateModule, MAT_MOMENT_DATE_ADAPTER_OPTIONS } from '@angular/material-moment-adapter';\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { NewDateRangeInputComponent } from './new-date-range-input.component';\n\n\n\n@NgModule({\n  declarations: [\n    NewDateRangeInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatDatepickerModule,\n    MatMomentDateModule\n  ],\n  providers: [\n    {provide: MAT_DATE_LOCALE, useValue: 'en-GB'},\n    {provide: MAT_MOMENT_DATE_ADAPTER_OPTIONS, useValue: {useUtc: true}}\n  ]\n})\nexport class NewDateRangeInputModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NewDateRangeInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "NumberInputModule",
            "id": "module-NumberInputModule-40baa26708de273af55c6288367af9f95f3997adcbaebb886501183c167ae42068867ce551a074efc5424259d3b5ae831052ff97937157cc76a97e4776b450a1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/number-input/number-input.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NumberInputComponent } from './number-input.component';\n\n\n\n@NgModule({\n  declarations: [\n    NumberInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    NumberInputComponent,\n  ]\n})\nexport class NumberInputModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "NumberInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "NumberInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SelectInputModule",
            "id": "module-SelectInputModule-78123de95d21e50acf5e1c4b290a852dc593fce1c1b98fd43113814e50576c5cf74f5dc9d5ff271d2efe378d4c5cf94e13ce1c29e12708153a075f246f4e579c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/select-input/select-input.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { SelectInputComponent } from './select-input.component';\n\n\n\n@NgModule({\n  declarations: [\n    SelectInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    MatTooltipModule,\n    MatCheckboxModule\n  ],\n  exports: [\n    SelectInputComponent,\n  ]\n})\nexport class SelectInputModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SelectInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SelectInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SliderInputModule",
            "id": "module-SliderInputModule-728256da8b26f5f58816cce4f19e39df59646f958820bfcce28963f30a410b6d155c23ef103ba95f208a2a13a98177b818bba85669a3f7199f525b07a94be241",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/slider-input/slider-input.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { SliderInputComponent } from './slider-input.component';\n\n\n\n@NgModule({\n  declarations: [\n    SliderInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSliderModule,\n  ],\n  exports: [\n    SliderInputComponent,\n  ]\n})\nexport class SliderInputModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SliderInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "SliderInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TextAreaModule",
            "id": "module-TextAreaModule-01d961e4710a2b3204092642a86f21e082e077387c68d3f123186627d21127d9585e42c8694e9ea4b1660f39794562beefc1fd229f28a90681fdcedda2201fac",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/text-area/text-area.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TextAreaComponent } from './text-area.component';\n\n\n\n@NgModule({\n  declarations: [\n    TextAreaComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    TextAreaComponent,\n  ]\n})\nexport class TextAreaModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TextAreaComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextAreaComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TextInputModule",
            "id": "module-TextInputModule-d70db03199064fb0ccbd539af6d2d98d08feb3cfe11ab17c846a24f1af4583a9acd42102cba4c3d4ecfefb7ee1f17186373d232ccc1a7deb743f2fed2ac7c4b0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/text-input/text-input.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TextInputComponent } from './text-input.component';\n\n\n\n@NgModule({\n  declarations: [\n    TextInputComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    TextInputComponent,\n  ]\n})\nexport class TextInputModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TextInputComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TextInputComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ToggleSlideModule",
            "id": "module-ToggleSlideModule-b8358f69ddd97d8a5d4e5dd5ca51e724d52b8ce8a840d4334e6c1c39abb3086f261298ec6874c2073da31db3255da1e958599ba6abf1faa6a23aa7fe82dc8f43",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/components/toggle-slide/toggle-slide.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { ToggleSlideComponent } from './toggle-slide.component';\n\n\n\n@NgModule({\n  declarations: [\n    ToggleSlideComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatSlideToggleModule,\n  ],\n  exports: [\n    ToggleSlideComponent,\n  ]\n})\nexport class ToggleSlideModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ToggleSlideComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ToggleSlideComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "CheckBoxSelect",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-range.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slider-control.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DefaultValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultvaluecontrol",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormControl()"
            },
            {
                "name": "defaultValueFormControl",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormControl()"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slider-control.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slider-control.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Error",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "errorInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormControl(123, Validators.compose([Validators.min(5)]))"
            },
            {
                "name": "errorInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormControl({ name: 'Hello' }, Validators.compose([Validators.required]))"
            },
            {
                "name": "errorInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slider-control.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormControl(0, Validators.compose([Validators.min(50)]))"
            },
            {
                "name": "errorInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormControl('hlo', Validators.compose([Validators.minLength(5)]))"
            },
            {
                "name": "errorInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormControl('hlo', Validators.compose([Validators.minLength(5)]))"
            },
            {
                "name": "fieldsToNotIncludeOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-range.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[ 'random', 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
            },
            {
                "name": "fieldsToNotIncludeOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
            },
            {
                "name": "fieldsToNotIncludeOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
            },
            {
                "name": "fieldsToNotIncludeOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
            },
            {
                "name": "fieldsToNotIncludeOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slider-control.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
            },
            {
                "name": "fieldsToNotIncludeOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
            },
            {
                "name": "fieldsToNotIncludeOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
            },
            {
                "name": "form",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-range.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormGroup({\r\n  start: new FormControl(new Date()),\r\n  end: new FormControl(new Date()),\r\n})"
            },
            {
                "name": "Formatted",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FormattedLong",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "GroupedSelect",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HardCodedDropdownPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "invalidSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new FormControl([{ name: 'Random'}, { name: 'Hello' }])"
            },
            {
                "name": "LargeListSlowLoad",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "largeSelectOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[]"
            },
            {
                "name": "Loading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MultiSelect",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MultiSelectDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MultiSelectPreSelected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "NonClearable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnBlur",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnBlur",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnBlur",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnBlur",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "OnBlurWithFormat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Prefix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Prefix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "RemoveRow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "SetDropdownWidth",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SliderWithNgContent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slider-control.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<app-slider-input\r\n    label=\"Form slider\">\r\n    <div style=\"display: flex; justify-content: space-between; width: 100%\">\r\n      <p>Label at start</p>\r\n      <p>Label at end</p>\r\n    </div>\r\n    </app-slider-input>`\r\n})"
            },
            {
                "name": "Suffix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Suffix",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuffixWithLongInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SuffixWithLongInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-range.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/date-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/number-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/slider-control.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-area.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/text-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
            },
            {
                "name": "tooltipDisplay",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "useFirstValueAsDefault",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ValidateSelection",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WiderDropdownWith",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/select-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<app-select-input\r\n  style=\"width: 400px\"\r\n  label=\"Select input\"\r\n  [disabled]=\"false\"\r\n  [bindValue]=\"undefined\"\r\n  [selectOptions]=\"[{ description: 'Hello' }]\"\r\n  dropdownWidth=\"800px\">\r\n</app-select-input>`\r\n})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/stories/select-input.stories.ts": [
                {
                    "name": "CheckBoxSelect",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultValueFormControl",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormControl()"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "errorInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormControl({ name: 'Hello' }, Validators.compose([Validators.required]))"
                },
                {
                    "name": "fieldsToNotIncludeOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
                },
                {
                    "name": "GroupedSelect",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "HardCodedDropdownPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "invalidSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormControl([{ name: 'Random'}, { name: 'Hello' }])"
                },
                {
                    "name": "LargeListSlowLoad",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "largeSelectOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[]"
                },
                {
                    "name": "Loading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MultiSelect",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MultiSelectDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "MultiSelectPreSelected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NonClearable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "RemoveRow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SetDropdownWidth",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
                },
                {
                    "name": "tooltipDisplay",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "useFirstValueAsDefault",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ValidateSelection",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WiderDropdownWith",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/select-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<app-select-input\r\n  style=\"width: 400px\"\r\n  label=\"Select input\"\r\n  [disabled]=\"false\"\r\n  [bindValue]=\"undefined\"\r\n  [selectOptions]=\"[{ description: 'Hello' }]\"\r\n  dropdownWidth=\"800px\">\r\n</app-select-input>`\r\n})"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/stories/date-range.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-range.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "fieldsToNotIncludeOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-range.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[ 'random', 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
                },
                {
                    "name": "form",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-range.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormGroup({\r\n  start: new FormControl(new Date()),\r\n  end: new FormControl(new Date()),\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-range.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
                }
            ],
            "src/stories/date-picker.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "fieldsToNotIncludeOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
                },
                {
                    "name": "OnBlur",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/date-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
                }
            ],
            "src/stories/number-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "errorInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormControl(123, Validators.compose([Validators.min(5)]))"
                },
                {
                    "name": "fieldsToNotIncludeOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
                },
                {
                    "name": "Formatted",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "FormattedLong",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnBlur",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "OnBlurWithFormat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Prefix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Suffix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuffixWithLongInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/number-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
                }
            ],
            "src/stories/slider-control.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slider-control.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slider-control.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slider-control.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "errorInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slider-control.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormControl(0, Validators.compose([Validators.min(50)]))"
                },
                {
                    "name": "fieldsToNotIncludeOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slider-control.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
                },
                {
                    "name": "SliderWithNgContent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slider-control.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(args) => ({\r\n  props: args,\r\n  template: `<app-slider-input\r\n    label=\"Form slider\">\r\n    <div style=\"display: flex; justify-content: space-between; width: 100%\">\r\n      <p>Label at start</p>\r\n      <p>Label at end</p>\r\n    </div>\r\n    </app-slider-input>`\r\n})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/slider-control.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
                }
            ],
            "src/stories/text-area.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "errorInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormControl('hlo', Validators.compose([Validators.minLength(5)]))"
                },
                {
                    "name": "fieldsToNotIncludeOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
                },
                {
                    "name": "OnBlur",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-area.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
                }
            ],
            "src/stories/text-input.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DefaultValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultvaluecontrol",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormControl()"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Error",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "errorInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new FormControl('hlo', Validators.compose([Validators.minLength(5)]))"
                },
                {
                    "name": "fieldsToNotIncludeOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "[ 'formControl', 'prefix', 'suffix', 'properties', 'inputValue', 'customerFormControl', 'onTouched', 'onChange' ]\r\n  .reduce((a, b) => {\r\n    return {\r\n      ...a,\r\n      [b]: {\r\n        table: {\r\n          disable: true,\r\n        }\r\n      }\r\n    }\r\n  }, {})"
                },
                {
                    "name": "OnBlur",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Prefix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Suffix",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SuffixWithLongInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/text-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "( args ) => ({\r\n   props: args,\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "src/app/components/base/base-form-input.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CustomFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/28",
                "status": "low"
            },
            {
                "filePath": "src/app/components/date-picker/date-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/components/date-range-input/date-range-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateRangeInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/30",
                "status": "low"
            },
            {
                "filePath": "src/app/components/new-date-range-input/new-date-range-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewDateRangeInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/36",
                "status": "low"
            },
            {
                "filePath": "src/app/components/number-input/number-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "src/app/components/select-input/select-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/53",
                "status": "low"
            },
            {
                "filePath": "src/app/components/slider-input/slider-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SliderInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/33",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text-area/text-area.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextAreaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/components/text-input/text-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/components/toggle-slide/toggle-slide.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleSlideComponent",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/showTooltip.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "showToolTipDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/directives/string-highlight.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "HighlightDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fieldsToNotIncludeOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnBlur",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-range.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-range.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fieldsToNotIncludeOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-range.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "form",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/date-range.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fieldsToNotIncludeOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Formatted",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormattedLong",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnBlur",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnBlurWithFormat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Prefix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Suffix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuffixWithLongInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/number-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckBoxSelect",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultValueFormControl",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fieldsToNotIncludeOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GroupedSelect",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HardCodedDropdownPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "invalidSelection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LargeListSlowLoad",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "largeSelectOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Loading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiSelect",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiSelectDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiSelectPreSelected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NonClearable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RemoveRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SetDropdownWidth",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "tooltipDisplay",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useFirstValueAsDefault",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ValidateSelection",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/select-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WiderDropdownWith",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slider-control.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slider-control.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slider-control.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slider-control.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slider-control.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fieldsToNotIncludeOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slider-control.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SliderWithNgContent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/slider-control.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fieldsToNotIncludeOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnBlur",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-area.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DefaultValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultvaluecontrol",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Error",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "errorInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "fieldsToNotIncludeOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OnBlur",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Prefix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Suffix",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SuffixWithLongInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/text-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}